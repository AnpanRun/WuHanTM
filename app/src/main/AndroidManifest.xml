<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.lzh.wuhantm">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.WuHanTM">
        <activity
            android:name=".activity.HookActivity"
            android:label="@string/title_activity_hook"
            android:theme="@style/Theme.WuHanTM.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".activity.DataBindingActivity" />
        <activity android:name=".activity.TMThreadActivity" />
        <activity android:name=".activity.SQLiteActivity" />
        <activity android:name=".view.SJFFActivity">
<!--            <intent-filter>-->
<!--                <action android:name="android.intent.action.MAIN" />-->

<!--                <category android:name="android.intent.category.LAUNCHER" />-->
<!--            </intent-filter>-->
        </activity>
        <activity android:name=".activity.MainActivity">

            <!-- <intent-filter> -->
            <!-- <action android:name="android.intent.action.MAIN" /> -->


            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
            <!-- </intent-filter> -->
        </activity>
        <!--
 属性
            //standard：标准模式
            //singleTop：栈顶复用模式
            //singleTask：栈内复用模式
            //singleInstance：单例模式
            //如不设置，Activity的启动模式默认为**标准模式（standard）**
        -->
        <activity
            android:name=".activity.RvActivity"
            android:launchMode="standard" />
        <activity android:name=".activity.TMFmActivity" />
        <activity android:name=".activity.TMViewActivity" />
        <activity android:name=".activity.ViewPageActivity" />

        <receiver
            android:name=".br.TMBroadcastReceiver"
            android:enabled="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>

        <service android:name=".service.TMService" />
        <!--
    android:enabled=["true" | "false"]
                此broadcastReceiver能否接收其他App的发出的广播
                默认值是由receiver中有无intent-filter决定的：如果有intent-filter，默认值为true，否则为false
                android:exported=["true" | "false"]
                android:icon="drawable resource"
                android:label="string resource"
                继承BroadcastReceiver子类的类名
                android:name=".mBroadcastReceiver"
                具有相应权限的广播发送者发送的广播才能被此BroadcastReceiver所接收；
                android:permission="string"
                BroadcastReceiver运行所处的进程
                默认为app的进程，可以指定独立的进程
                注：Android四大基本组件都可以通过此属性指定自己的独立进程
                android:process="string"
        -->
        <service
            android:name=".service.RemoteService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.lzh.wuhantm.service.AIDL_Service" />
            </intent-filter>
        </service>
    </application>

</manifest>